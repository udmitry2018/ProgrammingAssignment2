library(devtools)
find_rtools()
find.package(devtools)
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("KernSmooth")
install.packages("KernSmooth")
x <- c(0.5, 0.6)
x
x <- c(T, F)
x
x <- vector("numeric", 10)
x
x <- c(0.5, F)
x
x <- c("a", F)
x
x <-0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- c("a", "b", "c")
x
as.numeric(x)
x <- list(1, "a", TRUE)
x
m <- mantrix(nrow=2, ncol=3)
m
m <- matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow=2, ncol=3)
m
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
table(x)
unclass(x)
x <- c(1, 2, NA, 10, 3)
is.na(x)
is.nan(x)
x <- c(1, 2, NA, NaN, 3)
is.na(x)
is.nan(x)
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
nrow(x)
ncol(x)
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "north")
names(x)
x
x <- list(a=1, b=2, c=3)
x
m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a","b"), c("c", "d"))
m
x <- "foo"
y <- data.frame(a = 1, b = "a")
dump(c("x", "y"), file = "data.R")
rm(x,y)
source("data.R")
y
x
str(file)
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[[1]]
x$bar
x[["bar"]]
x["bar"]
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1,3)]
name <- "foo"
x[[name]]
x$name
x$foo
x$
a
x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x[[c(1,3)]]
x[[1][3]]
x[[1]][[3]]
x[c(2,1)]
x[[c(2,1)]
]
x <- matrix(1:6, 2, 3)
x[1,2]
x
x[2,1]
x[1, ]
x[,2]
x[1,2, FALSE]
x[1,2, drop = FALSE]
x[1, , drop=FALSE]
x <- list(aardvark = 1:5)
x$a
x[["a"]]
x[["a", exact = FALSE]]
x <- c(1,2, NA, 4, NA, 5)
bad <- is.na()
bad <- is.na(x)
x[!bad]
bad
x <- c(1, 2, NA, 4, NA, 5)
y <- c("a", "b", NA, "d", NA, "f")
good <- complete.cases(x, y)
good
x[good]
y[good]
airquality[1:6, ]
good <- complete.cases(airquality)
airquality[good, ][1:6, ]
x <- 1:4; y<- 6:9
x + y
x >2
y = 8
y == 8
y <- 6:9
y == 8
x*y
x/y
x <- matrix(1:4, 2, 2); y <- matrix(rep(10, 4), 2, 2)
x*y
y
x
x/y
x%*%y
x <- c(1, 3, 5); y <- c(3, 2, 10)
rbind(x, y)
x <- 1:4; y <-2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x<6] = 0
x
nrows(airquality)
dir()
dir()
wd("DataScience")
devtools.wd("DataScience")
library("devtools", lib.loc="C:/Program Files/R/R-3.3.1/library")
devtools.wd("DataScience")
wd("DataScience")
library("datasets", lib.loc="C:/Program Files/R/R-3.3.1/library")
wd("DataScience")
detach("package:datasets", unload=TRUE)
install.packages("devtools")
wd("DataScience")
setwd("~/DataScience")
dir()
install.packages("swirl")
packageVersion("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z*2 + 100
my_sqrt = sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4)+c(0, 10)
c(1, 2, 3, 4)+c(0, 10, 100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
play()
3+4
nxt()
file.path("mytest3.R")
file.path("mytest3.R", "folder1", "folder2")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = T)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq = seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 40)
info()
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf = num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char -> c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Dmitry")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"))
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
info()
main()
main()
main()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- [1:20]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
my_head <- c( "patient", "age", "weight", "bp", "rating", "test")
c( "patient", "age", "weight", "bp", "rating", "test")
cnames <- c( "patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
library(datasets)
data(iris)
tapply(iris$Sepal.Length, iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
t <- tapply(mtcars$hp, mtcars$cyl, mean)
t[8] - t[4]
t["8"] - t["4"]
sapply(mtcars, cyl, mean).
sapply(mtcars, cyl, mean)
source(cachemean)
source("cachemean.R")
getwd(0)
getwd()
setwd("~/DataScience")
setwd("DataScience")
ls()
setwd("DataScience")
source("cachemean.R")
v <- makeVector(c(1, 2, 3, 4))
cachemean(v)
cachemean(v)
?solv
?solve
setwd("C:\Users\Дмитрий\Documents\GitHub\ProgrammingAssignment2")
setwd("C:\Users\Дмитрий\Documents\GitHub\ProgrammingAssignment2")
setwd("C:\\Users\\Дмитрий\\Documents\\GitHub\\ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix(1:4, 2, 2)
makeCacheMatrix(m)
solve(m)
x <- makeCacheMatrix(m)
cacheSolve(x)
cacheSolve(x)
mx <- matrix(1:4, 2, 2)
mx
my <- makeCacheMatrix(m)
cacheSolve(my)
my
cacheSolve(my)
